AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Auth
Transform: AWS::Serverless-2016-10-31

Parameters:
  AppName:
    Type: String
    Description: Name of the application
  ClientDomains:
    Type: CommaDelimitedList
    Description: Array of domains allowed to this user pool
  AdminEmail:
    Type: String
    Description: Email address for adminstrator
  AddGroupsToScopes:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

Conditions:
  ScopedGroups: !Equals [!Ref AddGroupsToScopes, "true"]

Resources:
  DjournUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName}-UserPool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  DjournUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref DjournUserPool
      ClientName: !Sub ${AppName}-UserPoolClient
      GenerateSecret: false
      SupportedIdentityProviders:
        - "COGNITO"
      CallbackURLs: !Ref ClientDomains
      LogoutURLs: !Ref ClientDomains
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
        - profile

  DjournUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub ${AppName}-${AWS::AccountId}
      UserPoolId: !Ref DjournUserPool

  DjournAdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Administrators
      Description: Administrators User Group
      Precedence: 0
      UserPoolId: !Ref DjournUserPool

  DjournAdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      Username: !Ref AdminEmail
      DesiredDeliveryMediums:
        - EMAIL
      ForceAliasCreation: true
      UserAttributes:
        - Name: email
          Value: !Ref AdminEmail
      UserPoolId: !Ref DjournUserPool

  DjournAddUserToGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    Properties:
      GroupName: !Ref DjournAdminUserGroup
      Username: !Ref DjournAdminUser
      UserPoolId: !Ref DjournUserPool

Outputs:
  UserPoolId:
    Description: "User Pool ID"
    Value: !Ref DjournUserPool

  UserPoolArn:
    Description: "User Pool ARN"
    Value: !GetAtt DjournUserPool.Arn
    Export:
      Name: !Sub ${AWS::StackName}-UserPoolArn

  ArnKey:
    Description: "ARN Key"
    Value: !Sub ${AWS::StackName}-UserPoolArn

  UserPoolClientId:
    Description: "Application Client ID"
    Value: !Ref DjournUserPoolClient

  AuthUrl:
    Description: "Url used for Authentication"
    Value: "https://auth.djourn.xyz"
